{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport Colors from \"../../constants/Colors\";\nimport useColorScheme from \"../useColorScheme\";\nimport ModalScreen from \"../../screens/ModalScreen\";\nimport NotFoundScreen from \"../../screens/NotFoundScreen\";\nimport HomeScrren from \"../../screens/HomeScreen\";\nimport ProfileScrren from \"../../screens/ProfileScreen\";\nimport UploadPin from \"../../screens/UploadPin\";\nimport PinScreen from \"../../screens/PinScreen\";\nimport AuthStackNavigator from \"./AuthStackNavigator\";\nimport { useAuthenticationStatus } from \"@nhost/react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  var _useAuthenticationSta = useAuthenticationStatus(),\n      isAuthenticated = _useAuthenticationSta.isAuthenticated,\n      isLoading = _useAuthenticationSta.isLoading;\n\n  return _jsx(Stack.Navigator, {\n    children: !isAuthenticated ? _jsx(Stack.Screen, {\n      name: \"auth\",\n      component: AuthStackNavigator,\n      options: {\n        headerShown: false\n      }\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Root\",\n        component: BottomTabNavigator,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"PinScreen\",\n        component: PinScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"NotFound\",\n        component: NotFoundScreen,\n        options: {\n          title: \"Oops!\"\n        }\n      }), _jsx(Stack.Group, {\n        screenOptions: {\n          presentation: \"modal\"\n        },\n        children: _jsx(Stack.Screen, {\n          name: \"Modal\",\n          component: ModalScreen\n        })\n      })]\n    })\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint,\n      tabBarShowLabel: false\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Home\",\n      component: HomeScrren,\n      options: {\n        title: \"Home\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(TabBarIcon, {\n            name: \"home\",\n            color: \"gray\"\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"UploadPin\",\n      component: UploadPin,\n      options: {\n        title: \"Upload a pin\",\n        tabBarLabel: \"\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(TabBarIcon, {\n            name: \"plus\",\n            color: \"gray\"\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Profile\",\n      component: ProfileScrren,\n      options: {\n        tabBarLabel: \"\",\n        title: \"Profile\",\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(TabBarIcon, {\n            name: \"user\",\n            color: \"gray\"\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","HomeScrren","ProfileScrren","UploadPin","PinScreen","AuthStackNavigator","useAuthenticationStatus","Navigation","colorScheme","Stack","RootNavigator","isAuthenticated","isLoading","headerShown","BottomTabNavigator","title","presentation","BottomTab","tabBarActiveTintColor","tint","tabBarShowLabel","tabBarIcon","color","tabBarLabel","TabBarIcon","props","marginBottom"],"sources":["D:/react-native workSpace/vadimProjectNotjustDev/Printerest/PrinterestMyClone/hooks/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { ActivityIndicator, ColorSchemeName, Pressable } from \"react-native\";\n\nimport Colors from \"../../constants/Colors\";\nimport useColorScheme from \"../useColorScheme\";\nimport ModalScreen from \"../../screens/ModalScreen\";\nimport NotFoundScreen from \"../../screens/NotFoundScreen\";\n\nimport {\n  RootStackParamList,\n  RootTabParamList,\n  RootTabScreenProps,\n} from \"../../types\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport HomeScrren from \"../../screens/HomeScreen\";\nimport ProfileScrren from \"../../screens/ProfileScreen\";\nimport UploadPin from \"../../screens/UploadPin\";\nimport PinScreen from \"../../screens/PinScreen\";\nimport AuthStackNavigator from \"./AuthStackNavigator\";\nimport { useAuthenticationStatus } from \"@nhost/react\";\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <NavigationContainer\n     /*  linking={LinkingConfiguration}\n      theme={colorScheme === \"light\" ? DarkTheme : DefaultTheme} */\n    >\n     <RootNavigator />\n   \n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n\n\nconst {isAuthenticated,isLoading} = useAuthenticationStatus()\n\n/* if(isLoading){\n return <ActivityIndicator />\n} */\n\n\n\n  return (\n    <Stack.Navigator>\n      {!isAuthenticated?( <Stack.Screen\n        name=\"auth\"\n        component={AuthStackNavigator}\n        options={{ headerShown: false }}\n      />) :(\n        <>\n        <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n        options={{ headerShown: false }}\n      />\n       <Stack.Screen\n        name=\"PinScreen\"\n        component={PinScreen}\n        options={{ headerShown: false }}\n      />\n\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n      <Stack.Group screenOptions={{ presentation: \"modal\" }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n        </>\n      )\n      }\n      \n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n        tabBarShowLabel:false\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScrren}\n        options={{\n          title: \"Home\",\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={\"gray\"} />,\n  /*  headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate(\"Modal\")}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}\n            >\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                // color={Colors[colorScheme].text} \n                color={\"black\"}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ), */\n        }}\n      />\n      <BottomTab.Screen\n        name=\"UploadPin\"\n        component={UploadPin}\n        options={{\n          title: \"Upload a pin\",\n          tabBarLabel :\"\", \n          tabBarIcon: ({ color }) => <TabBarIcon name=\"plus\" color={\"gray\"} />,\n        }}\n      />\n\n      <BottomTab.Screen\n        name=\"Profile\"\n        component={ProfileScrren}\n        options={{\n          tabBarLabel:\"\",\n          title :\"Profile\",\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"user\" color={\"gray\"} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}