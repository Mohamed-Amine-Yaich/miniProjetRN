{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useNhostClient } from \"@nhost/react\";\nimport RemoteImg from \"./RemoteImg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Pin(props) {\n  var _props$pin = props.pin,\n      uri = _props$pin.uri,\n      title = _props$pin.title,\n      id = _props$pin.id;\n  console.log(props);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgUri = _useState2[0],\n      setImgUri = _useState2[1];\n\n  var navigation = useNavigation();\n  var route = useRoute();\n  var nhost = useNhostClient();\n\n  var gotToPinScreen = function gotToPinScreen() {\n    navigation.navigate(\"PinScreen\", {\n      id: id\n    });\n  };\n\n  return _jsxs(Pressable, {\n    onPress: gotToPinScreen,\n    style: styles.pinContainer,\n    children: [_jsxs(View, {\n      children: [_jsx(RemoteImg, {\n        pinImg: uri,\n        radius: 25\n      }), _jsx(Pressable, {\n        style: styles.heart,\n        children: _jsx(AntDesign, {\n          name: \"hearto\",\n          size: 25,\n          color: \"black\"\n        })\n      })]\n    }), _jsx(Text, {\n      style: styles.title,\n      children: title\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  pinContainer: {\n    margin: 5\n  },\n  title: {\n    fontSize: 20,\n    lineHeight: 30,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  img: {\n    width: \"100%\",\n    borderRadius: 25\n  },\n  heart: {\n    backgroundColor: \"#D3CFD4\",\n    width: 40,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n    position: \"absolute\",\n    bottom: 10,\n    right: 10\n  }\n});","map":{"version":3,"names":["AntDesign","React","useState","useNavigation","useRoute","useNhostClient","RemoteImg","Pin","props","pin","uri","title","id","console","log","imgUri","setImgUri","navigation","route","nhost","gotToPinScreen","navigate","styles","pinContainer","heart","StyleSheet","create","margin","fontSize","lineHeight","fontWeight","img","width","borderRadius","backgroundColor","height","alignItems","justifyContent","position","bottom","right"],"sources":["D:/react-native workSpace/vadimProjectNotjustDev/Printerest/PrinterestMyClone/components/Pin.tsx"],"sourcesContent":["import { AntDesign } from \"@expo/vector-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { View, Image, Text, StyleSheet, Pressable } from \"react-native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport { useNhostClient } from \"@nhost/react\";\r\nimport RemoteImg from \"./RemoteImg\";\r\n\r\nexport default function Pin(props) {\r\n  const { uri, title, id } = props.pin;\r\n  console.log(props);\r\n  const [imgUri, setImgUri] = useState<String>(\"\");\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n\r\n  const nhost = useNhostClient();\r\n\r\n  const gotToPinScreen = () => {\r\n    navigation.navigate(\"PinScreen\", { id });\r\n  };\r\n\r\n  return (\r\n    <Pressable onPress={gotToPinScreen} style={styles.pinContainer}>\r\n      <View>\r\n        <RemoteImg pinImg={uri } radius={25} />\r\n        <Pressable style={styles.heart}>\r\n          <AntDesign name=\"hearto\" size={25} color=\"black\" />\r\n        </Pressable>\r\n      </View>\r\n\r\n      <Text style={styles.title}>{title}</Text>\r\n    </Pressable>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  pinContainer: {\r\n    margin: 5,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    lineHeight: 30,\r\n    fontWeight: \"bold\",\r\n    margin: 10,\r\n  },\r\n\r\n  img: {\r\n    width: \"100%\",\r\n    borderRadius: 25,\r\n  },\r\n  heart: {\r\n    backgroundColor: \"#D3CFD4\",\r\n    width: 40,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 50,\r\n    position: \"absolute\",\r\n    bottom: 10,\r\n    right: 10,\r\n  },\r\n});\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,SAAP;;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;EACjC,iBAA2BA,KAAK,CAACC,GAAjC;EAAA,IAAQC,GAAR,cAAQA,GAAR;EAAA,IAAaC,KAAb,cAAaA,KAAb;EAAA,IAAoBC,EAApB,cAAoBA,EAApB;EACAC,OAAO,CAACC,GAAR,CAAYN,KAAZ;;EACA,gBAA4BN,QAAQ,CAAS,EAAT,CAApC;EAAA;EAAA,IAAOa,MAAP;EAAA,IAAeC,SAAf;;EACA,IAAMC,UAAU,GAAGd,aAAa,EAAhC;EACA,IAAMe,KAAK,GAAGd,QAAQ,EAAtB;EAEA,IAAMe,KAAK,GAAGd,cAAc,EAA5B;;EAEA,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3BH,UAAU,CAACI,QAAX,CAAoB,WAApB,EAAiC;MAAET,EAAE,EAAFA;IAAF,CAAjC;EACD,CAFD;;EAIA,OACE,MAAC,SAAD;IAAW,OAAO,EAAEQ,cAApB;IAAoC,KAAK,EAAEE,MAAM,CAACC,YAAlD;IAAA,WACE,MAAC,IAAD;MAAA,WACE,KAAC,SAAD;QAAW,MAAM,EAAEb,GAAnB;QAAyB,MAAM,EAAE;MAAjC,EADF,EAEE,KAAC,SAAD;QAAW,KAAK,EAAEY,MAAM,CAACE,KAAzB;QAAA,UACE,KAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,IAAI,EAAE,EAA/B;UAAmC,KAAK,EAAC;QAAzC;MADF,EAFF;IAAA,EADF,EAQE,KAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACX,KAApB;MAAA,UAA4BA;IAA5B,EARF;EAAA,EADF;AAYD;AAED,IAAMW,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,YAAY,EAAE;IACZI,MAAM,EAAE;EADI,CADiB;EAI/BhB,KAAK,EAAE;IACLiB,QAAQ,EAAE,EADL;IAELC,UAAU,EAAE,EAFP;IAGLC,UAAU,EAAE,MAHP;IAILH,MAAM,EAAE;EAJH,CAJwB;EAW/BI,GAAG,EAAE;IACHC,KAAK,EAAE,MADJ;IAEHC,YAAY,EAAE;EAFX,CAX0B;EAe/BT,KAAK,EAAE;IACLU,eAAe,EAAE,SADZ;IAELF,KAAK,EAAE,EAFF;IAGLG,MAAM,EAAE,EAHH;IAILC,UAAU,EAAE,QAJP;IAKLC,cAAc,EAAE,QALX;IAMLJ,YAAY,EAAE,EANT;IAOLK,QAAQ,EAAE,UAPL;IAQLC,MAAM,EAAE,EARH;IASLC,KAAK,EAAE;EATF;AAfwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}