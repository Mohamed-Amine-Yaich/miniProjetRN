{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView, useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useNhostClient } from \"@nhost/react\";\nimport RemoteImg from \"../components/RemoteImg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PinScreen() {\n  var _route$params;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      ratio = _useState2[0],\n      setRatio = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pin = _useState4[0],\n      setPin = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imgUri = _useState6[0],\n      setImgUri = _useState6[1];\n\n  var route = useRoute();\n  var navigation = useNavigation();\n  var insets = useSafeAreaInsets();\n  var pinId = (_route$params = route.params) == null ? void 0 : _route$params.id;\n  var GET_PIN_BY_ID = \"query MyQuery($id:uuid!) {\\n  pins_by_pk(id:$id ) {\\n    id\\n    image\\n    title\\n    created_at\\n    user {\\n      id\\n   \\n      avatarUrl\\n      displayName\\n    }\\n  }\\n}\";\n  var nhost = useNhostClient();\n\n  var fetchPinById = function _callee() {\n    var _await$nhost$graphql$, data, error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(nhost.graphql.request(GET_PIN_BY_ID, {\n              id: pinId\n            }));\n\n          case 2:\n            _await$nhost$graphql$ = _context.sent;\n            data = _await$nhost$graphql$.data;\n            error = _await$nhost$graphql$.error;\n\n            if (data) {\n              setPin(data.pins_by_pk);\n              console.log(\"56\");\n              console.log(data);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(\"hel\" + pin);\n  console.log(pin);\n  useEffect(function () {\n    fetchPinById();\n  }, []);\n\n  var goBack = function goBack() {\n    navigation.goBack();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [pin ? _jsx(RemoteImg, {\n        pinImg: pin.image\n      }) : null, _jsx(Text, {\n        style: styles.title,\n        children: pin == null ? void 0 : pin.title\n      }), _jsx(Pressable, {\n        onPress: goBack,\n        style: [styles.goBackBtn, {\n          top: insets.top\n        }],\n        children: _jsx(Ionicons, {\n          name: \"chevron-back\",\n          size: 35,\n          color: \"white\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"black\",\n    height: 100\n  },\n  img: {\n    width: \"100%\",\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    lineHeight: 35,\n    margin: 10\n  },\n  goBackBtn: {\n    position: \"absolute\",\n    left: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","SafeAreaView","useSafeAreaInsets","useRoute","useNavigation","Ionicons","StatusBar","useNhostClient","RemoteImg","PinScreen","ratio","setRatio","pin","setPin","imgUri","setImgUri","route","navigation","insets","pinId","params","id","GET_PIN_BY_ID","nhost","fetchPinById","graphql","request","data","error","pins_by_pk","console","log","goBack","backgroundColor","styles","container","image","title","goBackBtn","top","StyleSheet","create","height","img","width","borderTopLeftRadius","borderTopRightRadius","fontSize","fontWeight","textAlign","lineHeight","margin","position","left"],"sources":["D:/react-native workSpace/vadimProjectNotjustDev/Printerest/PrinterestMyClone/screens/PinScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Text, View, Image, StyleSheet, Pressable } from \"react-native\";\r\nimport {\r\n  SafeAreaView,\r\n  useSafeAreaInsets,\r\n} from \"react-native-safe-area-context\";\r\n\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\n\r\nimport pins from \"../assets/pins\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport Constants from \"expo-constants\";\r\nimport { useNhostClient } from \"@nhost/react\";\r\nimport RemoteImg from \"../components/RemoteImg\";\r\n\r\nexport default function PinScreen() {\r\n  const [ratio, setRatio] = useState(1);\r\n  const [pin, setPin] = useState(null);\r\n  const [imgUri, setImgUri] = useState(\"\");\r\n\r\n  const route = useRoute();\r\n  const navigation = useNavigation();\r\n\r\n  //for the size of the notch ( from r-n-safe-area-context)\r\n  const insets = useSafeAreaInsets();\r\n\r\n  const pinId = route.params?.id;\r\n\r\n  //separate the logic of the query from the query itself\r\n  const GET_PIN_BY_ID = `query MyQuery($id:uuid!) {\r\n  pins_by_pk(id:$id ) {\r\n    id\r\n    image\r\n    title\r\n    created_at\r\n    user {\r\n      id\r\n   \r\n      avatarUrl\r\n      displayName\r\n    }\r\n  }\r\n}`;\r\n\r\n  // const pin = pins.find(p => p.id === pinId);\r\n  //query for pins from api\r\n  const nhost = useNhostClient();\r\n  const fetchPinById = async () => {\r\n    const { data, error } = await nhost.graphql.request(GET_PIN_BY_ID, {\r\n      id: pinId,\r\n    });\r\n    if (data) {\r\n      setPin(data.pins_by_pk);\r\n      console.log(\"56\")\r\n      console.log(data);\r\n    }\r\n  };\r\n  console.log(\"hel\" + pin);\r\n\r\n  console.log(pin);\r\n\r\n  //when component mount\r\n  useEffect(() => {\r\n    fetchPinById();\r\n  }, []);\r\n\r\n  const goBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: \"black\" }}>\r\n      <StatusBar style=\"light\" />\r\n      <View style={styles.container}>\r\n        {pin ? <RemoteImg pinImg={pin.image} /> : null}\r\n        <Text style={styles.title}>{pin?.title}</Text>\r\n        <Pressable\r\n          onPress={goBack}\r\n          style={[styles.goBackBtn, { top: insets.top }]}\r\n        >\r\n          <Ionicons name=\"chevron-back\" size={35} color={\"white\"} />\r\n        </Pressable>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"black\",\r\n    height: 100,\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n    fontWeight: \"600\",\r\n    textAlign: \"center\",\r\n    lineHeight: 35,\r\n    margin: 10,\r\n  },\r\n  goBackBtn: {\r\n    position: \"absolute\",\r\n    left: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}