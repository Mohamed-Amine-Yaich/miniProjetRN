{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Logo from \"./logo.png\";\nimport CustomButton from \"../components/CustomButton\";\nimport SocialSignInButtons from \"../components/SocialSignInButtons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useState } from \"react\";\nimport { useNhostClient } from \"@nhost/react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignInScreen = function SignInScreen() {\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var nhost = useNhostClient();\n\n  var onSignInPressed = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('hi', email, password);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(nhost.auth.signIn({\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n\n            if (response.error) {\n              Alert.alert(response.error.message);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onForgotPasswordPressed = function onForgotPasswordPressed() {\n    console.warn(\"Forgot password\");\n  };\n\n  var onSignUpPress = function onSignUpPress() {\n    navigation.navigate(\"Sign up\");\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Image, {\n        source: Logo,\n        style: [styles.logo, {\n          height: height * 0.3\n        }],\n        resizeMode: \"contain\"\n      }), _jsx(TextInput, {\n        value: email,\n        onChangeText: setEmail,\n        placeholder: \"Eamil\",\n        style: styles.input\n      }), _jsx(TextInput, {\n        value: password,\n        onChangeText: setPassword,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        style: styles.input\n      }), _jsx(CustomButton, {\n        text: \"Sign In\",\n        onPress: onSignInPressed\n      }), _jsx(CustomButton, {\n        text: \"Forgot password?\",\n        onPress: onForgotPasswordPressed,\n        type: \"TERTIARY\"\n      }), _jsx(SocialSignInButtons, {}), _jsx(CustomButton, {\n        text: \"Don't have an account? Create one\",\n        onPress: onSignUpPress,\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: \"center\",\n    padding: 20\n  },\n  logo: {\n    width: \"70%\",\n    maxWidth: 300,\n    maxHeight: 200\n  },\n  input: {\n    backgroundColor: \"white\",\n    width: \"100%\",\n    borderColor: \"#e8e8e8\",\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginVertical: 5,\n    height: 50\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["Logo","CustomButton","SocialSignInButtons","useNavigation","useState","useNhostClient","SignInScreen","useWindowDimensions","height","navigation","email","setEmail","password","setPassword","nhost","onSignInPressed","console","log","auth","signIn","response","error","Alert","alert","message","onForgotPasswordPressed","warn","onSignUpPress","navigate","styles","root","logo","input","StyleSheet","create","alignItems","padding","width","maxWidth","maxHeight","backgroundColor","borderColor","borderWidth","borderRadius","paddingHorizontal","marginVertical"],"sources":["D:/react-native workSpace/vadimProjectNotjustDev/Printerest/PrinterestMyClone/screens/Auth/SignInScreen/SignInScreen.tsx"],"sourcesContent":["import {\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  useWindowDimensions,\r\n  ScrollView,\r\n  TextInput,\r\n  Alert,\r\n} from \"react-native\";\r\nimport Logo from \"./logo.png\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport SocialSignInButtons from \"../components/SocialSignInButtons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useState } from \"react\";\r\nimport { useNhostClient } from \"@nhost/react\";\r\n\r\nconst SignInScreen = () => {\r\n  const { height } = useWindowDimensions();\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const nhost = useNhostClient();\r\n  const onSignInPressed = async () => {\r\n    console.log('hi',email, password);\r\n    // validate user\r\n    // navigation.navigate('Home');\r\n    const response = await nhost.auth.signIn({ email, password });\r\n\r\n    console.log(response);\r\n    if (response.error) {\r\n      Alert.alert(response.error.message);\r\n    } \r\n  };\r\n\r\n  const onForgotPasswordPressed = () => {\r\n    console.warn(\"Forgot password\");\r\n  };\r\n\r\n  const onSignUpPress = () => {\r\n    navigation.navigate(\"Sign up\");\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.root}>\r\n        <Image\r\n          source={Logo}\r\n          style={[styles.logo, { height: height * 0.3 }]}\r\n          resizeMode=\"contain\"\r\n        />\r\n\r\n        <TextInput\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          placeholder=\"Eamil\"\r\n          style={styles.input}\r\n        />\r\n\r\n        <TextInput\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          style={styles.input}\r\n        />\r\n\r\n        <CustomButton text=\"Sign In\" onPress={onSignInPressed} />\r\n\r\n        <CustomButton\r\n          text=\"Forgot password?\"\r\n          onPress={onForgotPasswordPressed}\r\n          type=\"TERTIARY\"\r\n        />\r\n\r\n        <SocialSignInButtons />\r\n\r\n        <CustomButton\r\n          text=\"Don't have an account? Create one\"\r\n          onPress={onSignUpPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  logo: {\r\n    width: \"70%\",\r\n    maxWidth: 300,\r\n    maxHeight: 200,\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n\r\n    borderColor: \"#e8e8e8\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n\r\n    paddingHorizontal: 10,\r\n    marginVertical: 5,\r\n    height: 50,\r\n  },\r\n});\r\n\r\nexport default SignInScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}