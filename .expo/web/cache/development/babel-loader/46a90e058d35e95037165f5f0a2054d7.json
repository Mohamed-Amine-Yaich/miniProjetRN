{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./hooks/navigation\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { NhostClient, NhostReactProvider } from \"@nhost/react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nwindow = undefined;\nvar nhost = new NhostClient({\n  backendUrl: \"https://cubokkyhvyvqykwbcawu.nhost.run\",\n  clientStorageType: \"expo-secure-storage\",\n  clientStorage: SecureStore\n});\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _jsx(NhostReactProvider, {\n      nhost: nhost,\n      children: _jsxs(SafeAreaProvider, {\n        children: [_jsx(Navigation, {\n          colorScheme: colorScheme\n        }), _jsx(StatusBar, {})]\n      })\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","SecureStore","NhostClient","NhostReactProvider","window","undefined","nhost","backendUrl","clientStorageType","clientStorage","App","isLoadingComplete","colorScheme"],"sources":["D:/react-native workSpace/vadimProjectNotjustDev/Printerest/PrinterestMyClone/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./hooks/navigation\";\n\n//used for store some cache data token or something like asyncStorage in rn ,\nimport * as SecureStore from \"expo-secure-store\";\n//nhost client for communicate with graph QL Api\nimport { NhostClient, NhostReactProvider } from \"@nhost/react\";\n\nwindow = undefined;\n\n//nhost client\n//create an instance of the nhclient that take an object as a prameter\n//on this object we specify the backend url, the client storge type (only in mobile apps not in browser)\n\nconst nhost = new NhostClient({\n  backendUrl: \"https://cubokkyhvyvqykwbcawu.nhost.run\",\n  clientStorageType: \"expo-secure-storage\",\n  clientStorage: SecureStore,\n});\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      //all ower screen are now able to use some hooks provided by NhostReactProvider to get access to the nhost client that we set\n      <NhostReactProvider nhost={nhost}>\n        <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </NhostReactProvider>\n    );\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAGA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,cAAhD;;;AAEAC,MAAM,GAAGC,SAAT;AAMA,IAAMC,KAAK,GAAG,IAAIJ,WAAJ,CAAgB;EAC5BK,UAAU,EAAE,wCADgB;EAE5BC,iBAAiB,EAAE,qBAFS;EAG5BC,aAAa,EAAER;AAHa,CAAhB,CAAd;AAMA,eAAe,SAASS,GAAT,GAAe;EAC5B,IAAMC,iBAAiB,GAAGb,kBAAkB,EAA5C;EACA,IAAMc,WAAW,GAAGb,cAAc,EAAlC;;EAEA,IAAI,CAACY,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAEE,KAAC,kBAAD;MAAoB,KAAK,EAAEL,KAA3B;MAAA,UACE,MAAC,gBAAD;QAAA,WACE,KAAC,UAAD;UAAY,WAAW,EAAEM;QAAzB,EADF,EAEE,KAAC,SAAD,KAFF;MAAA;IADF,EAFF;EASD;AACF"},"metadata":{},"sourceType":"module"}